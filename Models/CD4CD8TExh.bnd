//Write next line to {
//Type: Can have several, (State, TrReg (transcriptional regulator, include transcription factor), Ligand, Receptor, Complex, Family)
//Name: (alternative name)
//Deprecated: (equations that have been modified)
// Cell states initial condition should be carefully set
//
//States in CD8_Tum model
//
Node Tum {
//Type: State
     logic = (Tum);
           rate_up = @logic ? $u_Tum : 0;
           rate_down = @logic ? 0 : $d_Tum;
         }
Node TCell {
//Type: State
     logic = (TCell);
           rate_up = @logic ? $u_TCell : 0;
           rate_down = @logic ? 0 : $d_TCell;
         }
Node CART {
//Type: Receptor
// Was consider as a state in CD8_Tum model
  logic = (CART);
  rate_up = @logic ? $u_CART : 0;
  rate_down = @logic ? 0 : $d_CART;
}
Node TA_tum {
//Type: State
//Name: TumorAntigen
//Tumor that has an antigene that can activate CATT cells
  logic = (TA_tum);
  rate_up = @logic ? $u_TA_tum : 0;
  rate_down = @logic ? 0 : $d_TA_tum;
}
Node TExh {
//Type: State
//Deprecated: logic = (!TIGIT & !CTLA4 & LAG3) | (!TIGIT & CTLA4) | (TIGIT);
  logic = LAG3 | (CTLA4 | TIGIT); // same logic
  rate_up = @logic ? $u_TExh : 0;
  rate_down = @logic ? 0 : $d_TExh;
}
Node Death {
//Type: State
//Deprecated: logic = (!FAS_FASL & !GZMB & Perforin) | (!FAS_FASL & GZMB) | (FAS_FASL);
  logic = CASP | TExh ;
  rate_up = @logic ? $u_Death : 0;
  rate_down = @logic ? 0 : $d_Death;
}
Node Prolif {
//Type: State
// --> to be fused below
  logic = (MYC);
  rate_up = @logic ? $u_Prolif : 0;
  rate_down = 0;
}
//
// States in CD4 model
//
Node CAR {
//Type: Receptor
// Should be fused with type above
//Deprecated: logic = ((BCMA AND LCK) AND NOT ((SHP1 AND THEMIS)));
	logic = (LCK AND NOT ((SHP1 AND THEMIS)));
	rate_up = @logic ? $u_CAR : 0;
	rate_down = @logic ? 0 : $d_CAR;
}
Node Treg {
//Type: State
	logic = FOXP3;
	rate_up = @logic ? $u_Treg : 0;
	rate_down = @logic ? 0 : $d_Treg;
}
Node Th1 {
//Type: State
	logic = (TBET AND IFNg);
	rate_up = @logic ? $u_Th1 : 0;
	rate_down = @logic ? 0 : $d_Th1;
}
Node Th2 {
//Type: State
	logic = (GATA3 AND IL4);
	rate_up = @logic ? $u_Th2 : 0;
	rate_down = @logic ? 0 : $d_Th2;
}
Node profileration {
//Type: State
// --> to be fused above
	logic = E2F;
	rate_up = @logic ? $u_profileration : 0;
	rate_down = @logic ? 0 : $d_profileration;
}
Node cytotoxic {

	logic = (GZMB OR PRF1);
	rate_up = @logic ? $u_cytotoxic : 0;
	rate_down = @logic ? 0 : $d_cytotoxic;
}
Node Apoptosis {
	logic = (((NOT BCLXL AND NOT BCL2)) OR DISC);
	rate_up = @logic ? $u_Apoptosis : 0;
	rate_down = @logic ? 0 : $d_Apoptosis;
}
Node memory {
	logic = IL7Rt;
	rate_up = @logic ? $u_memory : 0;
	rate_down = @logic ? 0 : $d_memory;
}
Node Exhaustion {
	logic = (((TIM3 OR TIGIT) OR PD1) OR LAG3);
	rate_up = @logic ? $u_Exhaustion : 0;
	rate_down = @logic ? 0 : $d_Exhaustion;
}


//
// Common nodes in CD8_Tum model
//
Node AKT {
  logic = (PI3K & !SHP2);
  rate_up = @logic ? $u_AKT : 0;
  rate_down = @logic ? 0 : $d_AKT;
}
Node BACH2 {
//Type: TrReg
  logic = (AKT & !EZH2);
  rate_up = @logic ? $u_BACH2 : 0;
  rate_down = @logic ? 0 : $d_BACH2;
}
Node NFkB {
//Type: TrReg
//Type: Complex
  logic = (PKCtheta);
  rate_up = @logic ? $u_NFkB : 0;
  rate_down = @logic ? 0 : $d_NFkB;
}
Node FOXO1 {
//Tyhpe: TrReg
  logic = (!AKT & !EZH2 & !IL2R & !IL12R);
  rate_up = @logic ? $u_FOXO1 : 0;
  rate_down = @logic ? 0 : $d_FOXO1;
}
Node AP1 {
//thype: TrReg
//Deprecated: logic = (!AKT & !MAPK & PKCtheta) | (!AKT & MAPK) | (AKT);
  logic = PKCtheta | MAPK | AKT;   // same logic
  rate_up = @logic ? $u_AP1 : 0;
  rate_down = @logic ? 0 : $d_AP1;
}
Node IFNg {
//Type: Ligand
//Deprecated: logic = (!BACH2 & !TBET_ZEB2 & EOMES) | (!BACH2 & TBET_ZEB2);
  logic = !BACH2 & (EOMES | TBET_ZEB2); // same logic
  rate_up = @logic ? $u_IFNg : 0;
  rate_down = @logic ? 0 : $d_IFNg;
}
Node IFNgR {
//Type: Receptor
  rate_up =  $u_IFNgR ;
  rate_down = $d_IFNgR;
}
Node BLIMP1 {
//Type: TrReg
  logic = (!BACH2 & !BCL6 & IL2R);
  rate_up = @logic ? $u_BLIMP1 : 0;
  rate_down = @logic ? 0 : $d_BLIMP1;
}
Node TIGIT {
//Type: Receptor
//Deprecated: logic = (!BLIMP1 & !IL2R & IL15R) | (!BLIMP1 & IL2R) | (BLIMP1);
  logic = (IL15R | IL2R | BLIMP1);  // same logic
  rate_up = @logic ? $u_TIGIT : 0;
  rate_down = @logic ? 0 : $d_TIGIT;
}
Node TCR {
//Type: Receptor
//Deprecated: logic = (!TCR & !BTLA & !CTLA4 & !TIM3 & !PD1 & scFv) | (TCR & !BTLA & !CTLA4 & !TIM3 & !PD1);
//Deprecated: logic = TCell & ((!TCR & !BTLA & !CTLA4 & !TIM3 & !PD1 & scFv) | (TCR & !BTLA & !CTLA4 & !TIM3 & !PD1));
  logic = TCell & !BTLA & !CTLA4 & !TIM3 & !PD1 & (scFv | TCR ); // same logic
  rate_up = @logic ? $u_TCR : 0;
  rate_down = @logic ? 0 : $d_TCR;
}
Node RAS {
//Deprecated: logic = (!GRB2_SOS & PLCgamma) | (GRB2_SOS);
  logic = (PLCgamma | GRB2_SOS); // same logic
  rate_up = @logic ? $u_RAS : 0;
  rate_down = @logic ? 0 : $d_RAS;
}
Node PI3K {
  logic = (TCR);
  rate_up = @logic ? $u_PI3K : 0;
  rate_down = @logic ? 0 : $d_PI3K;
}
Node CTLA4 {
//Type: Receptor
//Deprecated: logic = (!NFATC2 & !NFATC1 & CART) | (!NFATC2 & NFATC1) | (NFATC2);
  logic = (CART | NFATC1 | NFATC2); // same logic
  rate_up = @logic ? $u_CTLA4 : 0;
  rate_down = @logic ? 0 : $d_CTLA4;
}
Node EGR2 {
//Type: TrReg TF
  logic = (MAPK);
  rate_up = @logic ? $u_EGR2 : 0;
  rate_down = @logic ? 0 : $d_EGR2;
}
Node TBET_ZEB2 {
//Type: TrReg
//Deprecated: logic = (!EGR2 & !TBET_ZEB2 & !IL12R & IL21R) | (!EGR2 & !TBET_ZEB2 & IL12R) | (!EGR2 & TBET_ZEB2);
  logic = !EGR2 & (IL21R | IL12R | TBET_ZEB2); // same logic
  rate_up = @logic ? $u_TBET_ZEB2 : 0;
  rate_down = @logic ? 0 : $d_TBET_ZEB2;
}
Node LAG3 {
//Type: Receptor
//Deprecated: logic = (!EGR2 & NFATC1) | (EGR2);
  logic = (NFATC1 | EGR2); //same logic
  rate_up = @logic ? $u_LAG3 : 0;
  rate_down = @logic ? 0 : $d_LAG3;
}
Node EOMES {
//Type: TrReg
  logic = (NFkB & !EZH2);
  rate_up = @logic ? $u_EOMES : 0;
  rate_down = @logic ? 0 : $d_EOMES;
}
Node GZMB {
//Type: Ligand
//Deprecated: logic = (!TBET_ZEB2 & EOMES) | (TBET_ZEB2);
  logic = (EOMES | TBET_ZEB2); // same logic
  rate_up = @logic ? $u_GZMB : 0;
  rate_down = @logic ? 0 : $d_GZMB;
}
Node MYC {
//Type: TrReg
//Deprecated: logic = (!MTOR & HIF1A & !NIBcomp) | (MTOR & !NIBcomp);
  logic = (!MTOR & HIF1A & !NIBcomp) | (MTOR & !NIBcomp);
  rate_up = @logic ? $u_MYC : 0;
  rate_down = @logic ? 0 : $d_MYC;
}
Node IL2R {
//Type: Receptor
  logic = (!NFkB & AP1 & !ID3) | (NFkB & !ID3);
  rate_up = @logic ? $u_IL2R : 0;
  rate_down = @logic ? 0 : $d_IL2R;
}
Node IL12R {
//Type: Receptor
  logic = (!NFATC2 & IL12R);
  rate_up = @logic ? $u_IL12R : 0;
  rate_down = @logic ? 0 : $d_IL12R;
}
Node TIM3 {
//Type: Receptor
  logic = (NFATC1);
  rate_up = @logic ? $u_TIM3 : 0;
  rate_down = @logic ? 0 : $d_TIM3;
}
Node PD1 {
//Type: Receptor
//Deprecated: logic = (!NFATC2 & !TBET_ZEB2 & !NFATC1 & PD1_tum & CART) | (!NFATC2 & !TBET_ZEB2 & NFATC1) | (NFATC2 & !TBET_ZEB2);
  logic = (!NFATC2 & !TBET_ZEB2 & !NFATC1 & CART) | (!NFATC2 & !TBET_ZEB2 & NFATC1) | (NFATC2 & !TBET_ZEB2);
  rate_up = @logic ? $u_PD1 : 0;
  rate_down = @logic ? 0 : $d_PD1;
}
Node FAS {
//Type: Receptor
//Deprecated: logic = Tum | (TCell & IFNgR) ; //seems that IFNg on FAS act only in TCell
  logic = (TCell & IFNgR) ;
  rate_up = @logic ? $u_FAS : 0;
  rate_down = @logic ? 0 : $d_FAS;
}
Node GRB2_SOS { //
  logic = (TCR);
  rate_up = @logic ? $u_GRB2_SOS : 0;
  rate_down = @logic ? 0 : $d_GRB2_SOS;
}
Node PKCtheta { //
  logic = (!AKT & !EGR2 & PLCgamma) | (!AKT & EGR2) | (AKT);
  rate_up = @logic ? $u_PKCtheta : 0;
  rate_down = @logic ? 0 : $d_PKCtheta;
}
Node SHP1 {
  logic = (PD1);
  rate_up = @logic ? $u_SHP1 : 0;
  rate_down = @logic ? 0 : $d_SHP1;
}
Node ZAP70 {
  logic = (RAS & !SHP2 & !SHP1);
  rate_up = @logic ? $u_ZAP70 : 0;
  rate_down = @logic ? 0 : $d_ZAP70;
}
Node LAT {
  logic = (!PD1 & ZAP70) | (PD1);
  rate_up = @logic ? $u_LAT : 0;
  rate_down = @logic ? 0 : $d_LAT;
}
Node PLCgamma {
  logic = (LAT);
  rate_up = @logic ? $u_PLCgamma : 0;
  rate_down = @logic ? 0 : $d_PLCgamma;
}


//
// Common nodes in CD4 model
//
Node SHP1 {
	logic = (GRB2 AND LAT);
	rate_up = @logic ? $u_SHP1 : 0;
	rate_down = @logic ? 0 : $d_SHP1;
}
Node abTCR {
	//logic = ((pMHCII AND LCK) AND NOT ((SHP1 AND THEMIS)));
	logic = (LCK AND NOT ((SHP1 AND THEMIS)));
	rate_up = @logic ? $u_abTCR : 0;
	rate_down = @logic ? 0 : $d_abTCR;
}
Node gdTCR {
	//logic = (surfAnt AND LCK);
	logic = (LCK);
	rate_up = @logic ? $u_gdTCR : 0;
	rate_down = @logic ? 0 : $d_gdTCR;
}
Node ZAP70 {
	logic = ((((gdTCR OR abTCR) OR CAR)) AND NOT SHP1);
	rate_up = @logic ? $u_ZAP70 : 0;
	rate_down = @logic ? 0 : $d_ZAP70;
}
Node LAT {
	logic = ZAP70;
	rate_up = @logic ? $u_LAT : 0;
	rate_down = @logic ? 0 : $d_LAT;
}
Node PI3K {
	logic = ((CD28 OR TEG28) OR IL2R);
	rate_up = @logic ? $u_PI3K : 0;
	rate_down = @logic ? 0 : $d_PI3K;
}
Node BLIMP1 {
	logic = (((EGR2 OR KLF2)) AND NOT BACH2);
	rate_up = @logic ? $u_BLIMP1 : 0;
	rate_down = @logic ? 0 : $d_BLIMP1;
}
Node BACH2 {
	logic = FOXO1;
	rate_up = @logic ? $u_BACH2 : 0;
	rate_down = @logic ? 0 : $d_BACH2;
}
Node AP1 {
	logic = ((FOS AND JUN) AND NOT BACH2);
	rate_up = @logic ? $u_AP1 : 0;
	rate_down = @logic ? 0 : $d_AP1;
}
Node NFKB {
	logic = NOT IkBa;
	rate_up = @logic ? $u_NFKB : 0;
	rate_down = @logic ? 0 : $d_NFKB;
}
Node FOXO1 {
	logic = NOT ((mTORC2 AND AKT));
	rate_up = @logic ? $u_FOXO1 : 0;
	rate_down = @logic ? 0 : $d_FOXO1;
}
Node ncNFKB {
	logic = (TRAF1 AND cIAP);
	rate_up = @logic ? $u_ncNFKB : 0;
	rate_down = @logic ? 0 : $d_ncNFKB;
}
Node AKT {
	logic = PDK1;
	rate_up = @logic ? $u_AKT : 0;
	rate_down = @logic ? 0 : $d_AKT;
}
Node RAS {
	logic = SOS;
	rate_up = @logic ? $u_RAS : 0;
	rate_down = @logic ? 0 : $d_RAS;
}
Node CTLA4 {
	logic = (CD80_86 AND ((FOXP3 AND NFAT)));
	rate_up = @logic ? $u_CTLA4 : 0;
	rate_down = @logic ? 0 : $d_CTLA4;
}
Node IL2R {
	//logic = IL2_L;
	rate_up = $u_IL2R;
	rate_down = $d_IL2R;
}
Node IL12R {
	//logic = IL12_L;
	rate_up = $u_IL12R;
	rate_down = $d_IL12R;
}
Node IFNGR {
	logic = 1;
	rate_up = @logic ? $u_IFNGR : 0;
	rate_down = @logic ? 0 : $d_IFNGR;
}
Node EOMES {
	logic = (((RUNX3 AND NOT GATA3)) OR TCF7);
	rate_up = @logic ? $u_EOMES : 0;
	rate_down = @logic ? 0 : $d_EOMES;
}
Node IFNg {
	logic = ((((((((STAT4 AND TBET)) OR ((RUNX3 AND EOMES))) OR ((AP1 AND ATF2))) OR NFAT)) AND NOT GATA3) AND NOT FOXO1);
	rate_up = @logic ? $u_IFNg : 0;
	rate_down = @logic ? 0 : $d_IFNg;
}
Node IL2Ra {
	logic = (((STAT5 OR ((NFAT AND FOXP3))) OR NFKB));
	rate_up = @logic ? $u_IL2Ra : 0;
	rate_down = @logic ? 0 : $d_IL2Ra;
}
Node EGR2 {
	logic = STAT3;
	rate_up = @logic ? $u_EGR2 : 0;
	rate_down = @logic ? 0 : $d_EGR2;
}
Node PD1 {
	logic = ((((((AP1 AND NOT NFAT)) OR ((MAF AND BLIMP1))) OR ((((NFAT AND NOT AP1) AND NOT FOXP3) AND NOT BLIMP1)))) AND NOT TBET);
	rate_up = @logic ? $u_PD1 : 0;
	rate_down = @logic ? 0 : $d_PD1;
}
Node TIM3 {
	logic = ((((BLIMP1 AND MAF)) OR ((NFIL3 AND TBET))) OR (((NFAT AND NOT AP1) AND NOT FOXP3)));
	rate_up = @logic ? $u_TIM3 : 0;
	rate_down = @logic ? 0 : $d_TIM3;
}
Node LAG3 {
	logic = (((MAF AND BLIMP1)) OR (((NFAT AND NOT AP1) AND NOT FOXP3)));
	rate_up = @logic ? $u_LAG3 : 0;
	rate_down = @logic ? 0 : $d_LAG3;
}
Node TIGIT {
	logic = (MAF AND BLIMP1);
	rate_up = @logic ? $u_TIGIT : 0;
	rate_down = @logic ? 0 : $d_TIGIT;
}
Node GZMB {
	logic = (RUNX3 AND NOT TCF7);
	rate_up = @logic ? $u_GZMB : 0;
	rate_down = @logic ? 0 : $d_GZMB;
}
Node cMYC {
	logic = (mTORC1 AND ERK);
	rate_up = @logic ? $u_cMYC : 0;
	rate_down = @logic ? 0 : $d_cMYC;
}
Node FAS_L {
	logic = FAS_L;
	rate_up = @logic ? $u_FAS_L : 0;
	rate_down = @logic ? 0 : $d_FAS_L;
}
Node FAS {
	// logic = FAS_L;
	rate_up = $u_FAS;
	rate_down = $d_FAS;
}


//
// Extra nodes in CD8_Tum model
//
Node CD137L {//CHECK initial condition
//Type: Ligand
//Name: TNFSF9
  logic = (CD137L);
  rate_up = @logic ? $u_CD137L : 0;
  rate_down = @logic ? 0 : $d_CD137L;
}
Node R_4_1BB {
//Type: Receptor
//Name: TNFRSF9
//Deprecated: logic = (CD137L & TCR);
  logic = (TCR); //
  rate_up = @logic ? $u_R_4_1BB : 0;
  rate_down = @logic ? 0 : $d_R_4_1BB;
}
Node FASL {//CHECK effect on Tum, TCell?
//Type: Ligand
//Deprecated: logic = (R_4_1BB & NR4A1 & IFNg & !ID3 & EGR2 & MYC & NFATC1); remove IFNg, replace by receptor
  logic = (R_4_1BB & NR4A1 & !ID3 & EGR2 & MYC & NFATC1);
  rate_up = @logic ? $u_FASL : 0;
  rate_down = @logic ? 0 : $d_FASL;
}
Node TCF1 {
//Type: TrReg
//Deprecated: logic = (!R_4_1BB & !FOXO1 & !BCL6 & !EZH2 & EGR2) | (!R_4_1BB & !FOXO1 & BCL6 & !EZH2) | (!R_4_1BB & FOXO1 & !EZH2) | (R_4_1BB & !EZH2);
  logic = (!R_4_1BB & !FOXO1 & !BCL6 & !EZH2 & EGR2) | (!R_4_1BB & !FOXO1 & BCL6 & !EZH2) | (!R_4_1BB & FOXO1 & !EZH2) | (R_4_1BB & !EZH2);
  rate_up = @logic ? $u_TCF1 : 0;
  rate_down = @logic ? 0 : $d_TCF1;
}
Node NFATC2 {
//Type: TrReg
  logic = (!AKT & ZAP70) | (AKT);
  rate_up = @logic ? $u_NFATC2 : 0;
  rate_down = @logic ? 0 : $d_NFATC2;
}
Node MTOR {
  logic = (AKT);
  rate_up = @logic ? $u_MTOR : 0;
  rate_down = @logic ? 0 : $d_MTOR;
}
Node NR4A1 { // nuclear receptor
  logic = (AP1);
  rate_up = @logic ? $u_NR4A1 : 0;
  rate_down = @logic ? 0 : $d_NR4A1;
}
Node ID3 {
//Type: TrReg
//Deprecated: logic = (!BACH2 & !BLIMP1 & EGR2 & !TBET_ZEB2) | (BACH2 & !BLIMP1 & !TBET_ZEB2);
  logic = (EGR2 | BACH2 ) & !BLIMP1 & !TBET_ZEB2; // same logic
  rate_up = @logic ? $u_ID3 : 0;
  rate_down = @logic ? 0 : $d_ID3;
}
Node BCL6 {
//Type: TrReg
  logic = (!TCF1 & !NFATC2 & !NFkB & NFATC1 & !NIBcomp & !Epigenetic) | (!TCF1 & !NFATC2 & NFkB & !NIBcomp & !Epigenetic) | (!TCF1 & NFATC2 & !NIBcomp & !Epigenetic) | (TCF1 & !NIBcomp & !Epigenetic);
  rate_up = @logic ? $u_BCL6 : 0;
  rate_down = @logic ? 0 : $d_BCL6;
}
Node CD160 {
//type: Receptor
  logic = (BLIMP1);
  rate_up = @logic ? $u_CD160 : 0;
  rate_down = @logic ? 0 : $d_CD160;
}
Node CD244 {
//Type: Receptor
  logic = (BLIMP1);
  rate_up = @logic ? $u_CD244 : 0;
  rate_down = @logic ? 0 : $d_CD244;
}
Node BTLA {
//Type: Receptor
  logic = (NFkB);
  rate_up = @logic ? $u_BTLA : 0;
  rate_down = @logic ? 0 : $d_BTLA;
}
Node EZH2 {
  logic = (TCR);
  rate_up = @logic ? $u_EZH2 : 0;
  rate_down = @logic ? 0 : $d_EZH2;
}
Node E2A {
//Type: TrReg
  logic = (E2A);
  rate_up = @logic ? $u_E2A : 0;
  rate_down = @logic ? 0 : $d_E2A;
}
Node CXCR5 {
//Type: Receptor
//Deprecated: logic = (!ID3 & E2A) | (ID3);
  logic = (E2A | ID3); // same logic
  rate_up = @logic ? $u_CXCR5 : 0;
  rate_down = @logic ? 0 : $d_CXCR5;
}
Node Perforin {
//Type: Ligand
//Deprecated: logic = (!EOMES & Cytogran) | (EOMES);
  logic = Cytogran | (EOMES); // same logic
  rate_up = @logic ? $u_Perforin : 0;
  rate_down = @logic ? 0 : $d_Perforin;
}
Node PGC1A {
//Type: TrReg
  logic = (FOXO1);
  rate_up = @logic ? $u_PGC1A : 0;
  rate_down = @logic ? 0 : $d_PGC1A;
}
Node HIF1A {
//Type: TrReg
  logic = (MTOR);
  rate_up = @logic ? $u_HIF1A : 0;
  rate_down = @logic ? 0 : $d_HIF1A;
}
Node PPARa { //nuclear receptor
//Type: TrReg
  logic = (!HIF1A);
  rate_up = @logic ? $u_PPARa : 0;
  rate_down = @logic ? 0 : $d_PPARa;
}
Node IL21R { //Receptor
  logic = (IL21R);
  rate_up = @logic ? $u_IL21R : 0;
  rate_down = @logic ? 0 : $d_IL21R;
}
Node ID2 {
//Type: TrReg
//Deprecated: logic = (!IL2R & !IL12R & IL21R) | (!IL2R & IL12R) | (IL2R);
  logic = (IL21R) | (IL12R) | (IL2R); // same logic
  rate_up = @logic ? $u_ID2 : 0;
  rate_down = @logic ? 0 : $d_ID2;
}
Node BATF {
//Type: TrReg
  logic = (!IL12R & IL21R) | (IL12R);
  rate_up = @logic ? $u_BATF : 0;
  rate_down = @logic ? 0 : $d_BATF;
}
Node IL15R {
//Type: Receptor
  logic = (IL15R);
  rate_up = @logic ? $u_IL15R : 0;
  rate_down = @logic ? 0 : $d_IL15R;
}
Node IRF4 {
//Type: TrReg
  logic = (!MTOR & !IL2R & !IL21R & NFATC1) | (!MTOR & !IL2R & IL21R) | (!MTOR & IL2R) | (MTOR);
  rate_up = @logic ? $u_IRF4 : 0;
  rate_down = @logic ? 0 : $d_IRF4;
}
Node MAPK {
  logic = (RAS);
  rate_up = @logic ? $u_MAPK : 0;
  rate_down = @logic ? 0 : $d_MAPK;
}
Node NFATC1 {// type unsure
//Type: TrReg
  logic = (!NFATC2 & !NFATC1 & !NIBcomp & ZAP70) | (!NFATC2 & !NFATC1 & NIBcomp) | (!NFATC2 & NFATC1) | (NFATC2);
  rate_up = @logic ? $u_NFATC1 : 0; // PostTrans regulation, NFATC2 seems only competing
  rate_down = @logic ? 0 : $d_NFATC1; // PostTrans regulation, NFATC2 seems only competing
}
Node KLRG1 {
//Type: Receptor
  logic = (!TCF1);
  rate_up = @logic ? $u_KLRG1 : 0;
  rate_down = @logic ? 0 : $d_KLRG1;
}
Node NIBcomp { //?
  logic = (!AP1 & BATF & IRF4 & NFATC1);
  rate_up = @logic ? $u_NIBcomp : 0;
  rate_down = @logic ? 0 : $d_NIBcomp;
}
Node Epigenetic {
  logic = (BLIMP1);
  rate_up = @logic ? $u_Epigenetic : 0;
  rate_down = @logic ? 0 : $d_Epigenetic;
}
Node scFv { //Related to TCR activation
//Deprecated: logic = (CART & TA_tum);
  logic = (CART) ;
  rate_up = @logic ? $u_scFv : 0;
  rate_down = @logic ? 0 : $d_scFv;
}
Node SHP2 {
  logic = (!CTLA4 & PD1) | (CTLA4);
  rate_up = @logic ? $u_SHP2 : 0;
  rate_down = @logic ? 0 : $d_SHP2;
}
Node CASP { //simplified apoptosis pathway, CHECK cell type
    logic = FAS & Tum; // CHECK Fas Fasl on tum
    rate_up = (@logic ? $u_CASP : 0.0) +  (Tum ? $killByTCell : 0.0) ;
    rate_down = @logic ? 0 : $d_CASP; //$d_CASP should be tuned carefully
}
//
// Extra nodes in CD4 model
//
Node BCMA {
	logic = BCMA;
	rate_up = @logic ? $u_BCMA : 0;
	rate_down = @logic ? 0 : $d_BCMA;
}
Node pMHCII {
	logic = pMHCII;
	rate_up = @logic ? $u_pMHCII : 0;
	rate_down = @logic ? 0 : $d_pMHCII;
}
Node surfAnt {
	logic = surfAnt;
	rate_up = @logic ? $u_surfAnt : 0;
	rate_down = @logic ? 0 : $d_surfAnt;
}
Node LCK {
	logic = LCK;
	rate_up = @logic ? $u_LCK : 0;
	rate_down = @logic ? 0 : $d_LCK;
}
Node THEMIS {
	logic = (LAT AND GRB2);
	rate_up = @logic ? $u_THEMIS : 0;
	rate_down = @logic ? 0 : $d_THEMIS;
}
Node ITK {
	logic = (PI3K AND LAT);
	rate_up = @logic ? $u_ITK : 0;
	rate_down = @logic ? 0 : $d_ITK;
}
Node PLCG {
	logic = ITK;
	rate_up = @logic ? $u_PLCG : 0;
	rate_down = @logic ? 0 : $d_PLCG;
}
Node PKCt {
	logic = PLCG;
	rate_up = @logic ? $u_PKCt : 0;
	rate_down = @logic ? 0 : $d_PKCt;
}
Node Calc {
	logic = PLCG;
	rate_up = @logic ? $u_Calc : 0;
	rate_down = @logic ? 0 : $d_Calc;
}
Node GSK3 {
	logic = (NOT AKT AND NOT ERK);
	rate_up = @logic ? $u_GSK3 : 0;
	rate_down = @logic ? 0 : $d_GSK3;
}
Node NFAT {
	logic = ((Calc AND NOT GSK3) AND NOT BLIMP1);
	rate_up = @logic ? $u_NFAT : 0;
	rate_down = @logic ? 0 : $d_NFAT;
}
Node CD28 {
	//logic = (NOT CTLA4 AND CD80_86);
	logic = (NOT CTLA4);
	rate_up = @logic ? $u_CD28 : 0;
	rate_down = @logic ? 0 : $d_CD28;
}
Node TEG28 {
	logic = TEG28;
	rate_up = @logic ? $u_TEG28 : 0;
	rate_down = @logic ? 0 : $d_TEG28;
}
Node GRB2 {
	logic = ((LAT OR CD28) OR TEG28);
	rate_up = @logic ? $u_GRB2 : 0;
	rate_down = @logic ? 0 : $d_GRB2;
}
Node FOS {
	logic = (ERK AND NOT FOXO1);
	rate_up = @logic ? $u_FOS : 0;
	rate_down = @logic ? 0 : $d_FOS;
}
Node JUN {
	logic = JNK;
	rate_up = @logic ? $u_JUN : 0;
	rate_down = @logic ? 0 : $d_JUN;
}
Node IkBa {
	logic = NOT TAK1;
	rate_up = @logic ? $u_IkBa : 0;
	rate_down = @logic ? 0 : $d_IkBa;
}
Node ERK { // check with MAPK node
	logic = (RAS OR TRAF1);
	rate_up = @logic ? $u_ERK : 0;
	rate_down = @logic ? 0 : $d_ERK;
}
Node JNK { //check with MAPK node
	logic = (TRAF2 OR RAC);
	rate_up = @logic ? $u_JNK : 0;
	rate_down = @logic ? 0 : $d_JNK;
}
Node PDK1 {
	logic = PI3K;
	rate_up = @logic ? $u_PDK1 : 0;
	rate_down = @logic ? 0 : $d_PDK1;
}
Node FOXO3a {
	logic = NOT ((AKT AND mTORC2));
	rate_up = @logic ? $u_FOXO3a : 0;
	rate_down = @logic ? 0 : $d_FOXO3a;
}
Node BCLXL {
	logic = ((((NFKB OR (RAS AND Calc))) AND NOT BAD) AND NOT BIM);
	rate_up = @logic ? $u_BCLXL : 0;
	rate_down = @logic ? 0 : $d_BCLXL;
}
Node BCL2 {
	logic = (((FOXO1 OR STAT5)) AND NOT BIM);
	rate_up = @logic ? $u_BCL2 : 0;
	rate_down = @logic ? 0 : $d_BCL2;
}
Node BIM {
	logic = (((((FOXO3a OR (Calc AND PKCt))) AND NOT ncNFKB) AND NOT BCLXL) AND NOT BCL2);
	rate_up = @logic ? $u_BIM : 0;
	rate_down = @logic ? 0 : $d_BIM;
}
Node mTORC2 {
	logic = mTORC2;
	rate_up = @logic ? $u_mTORC2 : 0;
	rate_down = @logic ? 0 : $d_mTORC2;
}
Node TRAF1 {
	logic = ((s41BB OR TEG41BB) OR CAR);
	rate_up = @logic ? $u_TRAF1 : 0;
	rate_down = @logic ? 0 : $d_TRAF1;
}
Node IL12_L {
	logic = IL12_L;
	rate_up = @logic ? $u_IL12_L : 0;
	rate_down = @logic ? 0 : $d_IL12_L;
}
Node IL27_L {
	logic = IL27_L;
	rate_up = @logic ? $u_IL27_L : 0;
	rate_down = @logic ? 0 : $d_IL27_L;
}
Node IL2_L {
	logic = IL2_L;
	rate_up = @logic ? $u_IL2_L : 0;
	rate_down = @logic ? 0 : $d_IL2_L;
}
Node TGFB_L {
	logic = TGFB_L;
	rate_up = @logic ? $u_TGFB_L : 0;
	rate_down = @logic ? 0 : $d_TGFB_L;
}
Node CD80_86 {
	logic = CD80_86;
	rate_up = @logic ? $u_CD80_86 : 0;
	rate_down = @logic ? 0 : $d_CD80_86;
}
Node SOS {
	logic = GRB2;
	rate_up = @logic ? $u_SOS : 0;
	rate_down = @logic ? 0 : $d_SOS;
}
Node L41BB {
	logic = L41BB;
	rate_up = @logic ? $u_L41BB : 0;
	rate_down = @logic ? 0 : $d_L41BB;
}
Node s41BB {
	// logic = ((AP1 AND NFKB) AND L41BB);
	logic = (AP1 AND NFKB);
	rate_up = @logic ? $u_s41BB : 0;
	rate_down = @logic ? 0 : $d_s41BB;
}
Node TEG41BB {
	logic = TEG41BB;
	rate_up = @logic ? $u_TEG41BB : 0;
	rate_down = @logic ? 0 : $d_TEG41BB;
}
Node cIAP {
	logic = ((s41BB OR TEG41BB) OR CAR);
	rate_up = @logic ? $u_cIAP : 0;
	rate_down = @logic ? 0 : $d_cIAP;
}
Node TRAF2 {
	logic = ((((s41BB OR TEG41BB) OR CAR)) AND cIAP);
	rate_up = @logic ? $u_TRAF2 : 0;
	rate_down = @logic ? 0 : $d_TRAF2;
}
Node VAV {
	logic = (LAT OR GRB2);
	rate_up = @logic ? $u_VAV : 0;
	rate_down = @logic ? 0 : $d_VAV;
}
Node FOXP3 {
	logic = (((((SMADs AND FOXO1) OR (SMADs AND STAT1))) AND NOT NFIL3) AND NOT STAT3);
	rate_up = @logic ? $u_FOXP3 : 0;
	rate_down = @logic ? 0 : $d_FOXP3;
}
Node RAC {
	logic = VAV;
	rate_up = @logic ? $u_RAC : 0;
	rate_down = @logic ? 0 : $d_RAC;
}
Node P38 {
	logic = (TRAF2 OR RAC);
	rate_up = @logic ? $u_P38 : 0;
	rate_down = @logic ? 0 : $d_P38;
}
Node TGFBR {
	// logic = TGFB_L;
	rate_up = $u_TGFBR;
	rate_down = $d_TGFBR;
}
Node SMAD7 {
	logic = (SMADs AND NOT FOXP3);
	rate_up = @logic ? $u_SMAD7 : 0;
	rate_down = @logic ? 0 : $d_SMAD7;
}
Node SMADs {
	logic = (TGFBR AND NOT SMAD7);
	rate_up = @logic ? $u_SMADs : 0;
	rate_down = @logic ? 0 : $d_SMADs;
}
Node TAK1 {
	logic = (PKCt OR TRAF2);
	rate_up = @logic ? $u_TAK1 : 0;
	rate_down = @logic ? 0 : $d_TAK1;
}
Node IL27R {
	//logic = IL27_L;
	rate_up = $u_IL27R;
	rate_down = $d_IL27R;
}
Node SOCS3 {
	logic = NOT mTORC1;
	rate_up = @logic ? $u_SOCS3 : 0;
	rate_down = @logic ? 0 : $d_SOCS3;
}
Node STAT3 {
	logic = (IL27R AND NOT SOCS3);
	rate_up = @logic ? $u_STAT3 : 0;
	rate_down = @logic ? 0 : $d_STAT3;
}
Node GATA3 {
	logic = ((NOT TBET AND STAT6) AND ERK);
	rate_up = @logic ? $u_GATA3 : 0;
	rate_down = @logic ? 0 : $d_GATA3;
}
Node STAT4 {
	logic = ((IL12R AND NOT SOCS3) AND NOT GATA3);
	rate_up = @logic ? $u_STAT4 : 0;
	rate_down = @logic ? 0 : $d_STAT4;
}
Node STAT1 {
	logic = (IFNGR OR IL27R);
	rate_up = @logic ? $u_STAT1 : 0;
	rate_down = @logic ? 0 : $d_STAT1;
}
Node IL4R {
// receptor
//	logic = 1;
	rate_up = $u_IL4R ;
	rate_down = $d_IL4R;
}
Node SOCS5 {
	logic = NOT mTORC2;
	rate_up = @logic ? $u_SOCS5 : 0;
	rate_down = @logic ? 0 : $d_SOCS5;
}
Node STAT6 {
	logic = (IL4R AND NOT SOCS5);
	rate_up = @logic ? $u_STAT6 : 0;
	rate_down = @logic ? 0 : $d_STAT6;
}
Node STAT5 {
	logic = IL2R;
	rate_up = @logic ? $u_STAT5 : 0;
	rate_down = @logic ? 0 : $d_STAT5;
}
Node RUNX3 {
	logic = TBET;
	rate_up = @logic ? $u_RUNX3 : 0;
	rate_down = @logic ? 0 : $d_RUNX3;
}
Node IL4 {
	logic = (GATA3 AND NOT RUNX3);
	rate_up = @logic ? $u_IL4 : 0;
	rate_down = @logic ? 0 : $d_IL4;
}
Node TBET {
	logic = STAT1;
	rate_up = @logic ? $u_TBET : 0;
	rate_down = @logic ? 0 : $d_TBET;
}
Node ATF2 {
	logic = P38;
	rate_up = @logic ? $u_ATF2 : 0;
	rate_down = @logic ? 0 : $d_ATF2;
}
Node TCF7 {
	logic = FOXO1;
	rate_up = @logic ? $u_TCF7 : 0;
	rate_down = @logic ? 0 : $d_TCF7;
}
Node IL2 {
	logic = (((((AP1 AND NFAT)) OR NFKB)) AND NOT ((FOXP3 AND NFAT)));
	rate_up = @logic ? $u_IL2 : 0;
	rate_down = @logic ? 0 : $d_IL2;
}
Node NFIL3 {
	logic = (STAT3 AND NOT SMADs);
	rate_up = @logic ? $u_NFIL3 : 0;
	rate_down = @logic ? 0 : $d_NFIL3;
}
Node IL10 {
	logic = (BLIMP1 OR ((NFIL3 AND TBET)));
	rate_up = @logic ? $u_IL10 : 0;
	rate_down = @logic ? 0 : $d_IL10;
}
Node KLF2 {
	logic = FOXO1;
	rate_up = @logic ? $u_KLF2 : 0;
	rate_down = @logic ? 0 : $d_KLF2;
}
Node MAF {
	logic = (TGFBR OR STAT3);
	rate_up = @logic ? $u_MAF : 0;
	rate_down = @logic ? 0 : $d_MAF;
}
Node ICOS {
	logic = (((NFAT AND ((TBET OR GATA3)))) OR ERK);
	rate_up = @logic ? $u_ICOS : 0;
	rate_down = @logic ? 0 : $d_ICOS;
}
Node mTORC1 {
	logic = RHEB;
	rate_up = @logic ? $u_mTORC1 : 0;
	rate_down = @logic ? 0 : $d_mTORC1;
}
Node RHEB {
	logic = AKT;
	rate_up = @logic ? $u_RHEB : 0;
	rate_down = @logic ? 0 : $d_RHEB;
}
Node E2F {
	logic = cycD;
	rate_up = @logic ? $u_E2F : 0;
	rate_down = @logic ? 0 : $d_E2F;
}
Node PRF1 { // check with perforin
	logic = (EOMES AND RUNX3);
	rate_up = @logic ? $u_PRF1 : 0;
	rate_down = @logic ? 0 : $d_PRF1;
}
Node DISC {
	logic = (FAS AND NOT FLIP);
	rate_up = @logic ? $u_DISC : 0;
	rate_down = @logic ? 0 : $d_DISC;
}
Node cycD {
	logic = cMYC;
	rate_up = @logic ? $u_cycD : 0;
	rate_down = @logic ? 0 : $d_cycD;
}
Node BAD {
	logic = NOT ((AKT OR ERK));
	rate_up = @logic ? $u_BAD : 0;
	rate_down = @logic ? 0 : $d_BAD;
}
Node IL7_L {
	logic = IL7_L;
	rate_up = @logic ? $u_IL7_L : 0;
	rate_down = @logic ? 0 : $d_IL7_L;
}
Node IL7Rt {
	logic = FOXO1;
	rate_up = @logic ? $u_IL7Rt : 0;
	rate_down = @logic ? 0 : $d_IL7Rt;
}
Node IL7R {
	//logic = (IL7_L AND IL7Rt);
	logic = (IL7Rt);
	rate_up = @logic ? $u_IL7R : 0;
	rate_down = @logic ? 0 : $d_IL7R;
}
Node FLIP {
	logic = FLIP;
	rate_up = @logic ? $u_FLIP : 0;
	rate_down = @logic ? 0 : $d_FLIP;
}
